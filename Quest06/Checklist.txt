1. 인터넷은 어떻게 동작하나요? Internet Protocol Suite의 레이어 모델에 입각하여 설명해 보세요.
 정보를 담은 각 컴퓨터를 TCP/IP통신 프로토콜을 이용하여 연결해서 서로 정보를 주고받도록 한 컴퓨터 네트워크를 뜻한다. OSI 7 layer를 사용하는 것이 아닌 TCP/IP protocol suite를 사용함으로써
 응용층 전송층 네트워크층 데이터링크층 물리층을 거쳐 정보를 이동할 수 있게 가공한다. 중간중간에 라우터가 길의 방향을 찾아주는 역할을 하며 이 라우터에는 물리층 데이터링크층 네트워크층까지 밖에 없다.

2. 근거리에서 서로 떨어진 두 전자기기가 유선/무선으로 서로 통신하는 프로토콜은 어떻게 동작할까요?
 대표적으로 근거리 통신망인 LAN을 사용하여 동작할 수 있다. Ethernet, Token Ring, FDDI 등의 프로토콜이 있다. 그 중 Ethernet은 CSMA/CD의 동작과정을 예로 들자면 먼저 전송을 원하는 
 호스트는 네트워크에 캐리어를 감지해 전송이 가능한지 검사한다. 그리고 전송이 가능한 경우 브로드캐스트를 사용하여 위치를 찾아내고 전송로가 비어있는지 확인 후 비어있다면 데이터를 보내게 된다.
 
3. 근거리에 있는 여러 대의 전자기기가 서로 통신하는 프로토콜은 어떻게 동작할까요?
 위의 CSMA/CD를 예로 들면 위와 같이 통신하는 대신 통신 도중 충돌이 일어나거나 이미 사용중인 경로라면 송신 중단을 하고 일정 시간 후 재전송을 시도한다.

4. 아주 멀리 떨어져 있는 두 전자기기가 유선/무선으로 서로 통신하는 프로토콜은 어떻게 동작할까요?
 장거리의 경우 WAN을 사용하며 프로토콜에는 일대일 통신에 쓰이는 PPP(Point to Point Protocol)가 있다. Serial line 링크계층 프로토콜로 먼저 LPC를 이용한 연결을 구성한다.
 그리고 LCP의 옵션 중에 인증 옵션이 설정됐따면 부수적으로 인증 단계를 거친다. 그리고 LPC가 제대로 동작해 링크가 된다면 3계층 프로토콜을 교섭하는 과정을 진행한다.

5. 두 전자기기가 신뢰성을 가지고 통신할 수 있도록 하기 위한 프로토콜은 어떻게 동작할까요?
 신뢰성있는 전송을 보장하기 위해 데이터 링크 계층의 CRC기반의 오류 제어와 흐름제어를 한다.

6. HTTP는 어떻게 동작할까요?
 1. 브라우저는 DNS서버로 가서 그 주소에 해당하는 ip주소를 찾아와서 받아온다.
 2. 가져온 ip로 TCP통신을 통해 소켓 개방한다.
 3. 해당 사이트의 사본을 클라이언트에게 보내달라는 HTTP요청 메시지를 서버로 전송한다.
 4. 만약 라우팅 중 프록시 서버를 만나는 경우 웹 캐시에 저장된 정보를 응답 받게 된다.
 5. 프록시 서버가 아닌경우 특정 URL을 서빙하는 서버에 도달해 서버가 클라이언트의 요청을 승인하고 요청에 해당하는 데이터를 전송한다.
 6. 서버가 웹사이트의 파일들을 데이터 패킷으로 브라우저에 전송하고 브라우저의 로더는 해당 응답을 다운로드 할지 결정한다.
 7. 브라우저는 패킷들을 완전한 웹사이트로 만든 뒤 보여준다.

7. 우리가 브라우저의 주소 창에 www.knowre.com 을 쳤을 때, 어떤 과정을 통해 서버의 IP 주소를 알게 될까요?
 위에서 설명했듯 브라우저가 DNS서버로 가서 그 주소에 해당하는 ip주소를 찾아온다.


Quest
1. tracert(Windows가 아닌 경우 traceroute) 명령을 통해 www.google.com 까지 가는 경로를 찾아 보세요.
 어떤 IP주소들이 있나요?
 최대 30홉 이상의 google.com [216.58.197.238](으)로 가는 경로 추적:

  1    <1 ms    <1 ms    <1 ms  61.80.148.1
  2    <1 ms    <1 ms    <1 ms  112.190.198.29
  3     *        *        *     요청 시간이 만료되었습니다.
  4     5 ms     5 ms     5 ms  112.174.73.170
  5    40 ms    40 ms    40 ms  72.14.194.194
  6    42 ms    42 ms    42 ms  108.170.242.193
  7    41 ms    41 ms    41 ms  72.14.238.99
  8    39 ms    39 ms    39 ms  nrt13s49-in-f14.1e100.net [216.58.197.238]

 1-1. 그 IP주소들은 어디에 위치해 있나요?
  보안서버나 kt dns 등의 서버들을 지나쳐 구글 ip로 가게된다.
  
2. Wireshark를 통해 www.google.com 으로 요청을 날렸을 떄 어떤 TCP 패킷이 오가는지 확인해 보세요
 2-1. TCP 패킷을 주고받는 과정은 어떻게 되나요?
  Request를 하면 Reply를 하는 구조이다.

 2-2. 각각의 패킷에 어떤 정보들이 담겨 있나요?
  발신지포트, 목적지 포트, 순차번호, 확인 응답번호, 데이터 오프셋 필드, 검사합 등의 정보가 담겨있다.

3. telnet 명령을 통해 http://www.google.com/ URL에 HTTP 요청을 날려 보세요.
 3-1. 어떤 헤더들이 있나요?
  연결되지 않아서 확인 불가능
 3-2. 그 헤더들은 어떤 역할을 하나요?
  연결되지 않아서 확인 불가능

Advanced
1. HTTP의 최신 버전인 HTTP/3는 어떤 식으로 구성되어 있을까요?
 동일요청 메소드, 상태코드, 메시지 필드가 일반적으로 모든 버전에 적용되지만
 HTTP/1 HTTP/2는 TCP기반의 통신을 하지만 HTTP/3는 사용자 공간 혼잡 제어를 사용자 데이터그램 프로토콜(UDP)를 경유하여 사용되는 QUIC를 사용한다.

2. TCP/IP 외에 전세계적인 네트워크를 구성하기 위한 다른 방식도 제안된 바 있을까요?
 Telnet, POP3..? 찾아봐도 잘 모르겠다.