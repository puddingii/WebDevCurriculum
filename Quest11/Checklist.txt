1. RDBMS 테이블의 정규화는 무엇인가요?
 DB서버의 메모리 낭비를 피하기 위해 테이블을 식별자로 가지는 여러개의 테이블로 나누는 과정을 뜻한다.(더 이상 쪼개질수 없는 정도까지 쪼갬.)

2. MySQL 외의 RDB에는 어떤 것들이 있나요?
 오라클, DB2, Sybase, informix 등이 있다.
 2-1. Relational Database 외에 다른 DB에는 어떤 것들이 있을까요?
  NoSQL로 RDB를 제외한 나머지를 뜻하는 DB가 있다. KEY-VALUE, DOCUMENT, WIDE COLUMN, GRAPH DB가 있고 종류로는 몽고db나 Dynamo DB 등이 있다.

3. RDBMS에서 테이블의 인덱싱은 무엇인가요? 인덱싱을 하면 어떤 점이 다르며, 어떤 식으로 동작하나요?
 인덱싱은 필요한 데이터를 쉽게 찾을 수 있도록 도와주는 작업이다. 검색이 빨라진다는 장점이 있다. INDEX를 파일로 저장관리해 별도의 공간을 차지하고 이 INDEX파일을 사용해
 SELECT문을 더 빠르게 실행시킬 수 있음.

4. ORM을 사용하는 것은 사용하지 않는 것에 비해 어떤 장단점을 가지고 있나요?
 ORM : 객체와 관계형 데이터베이스의 데이터를 자동으로 매핑(연결)해주는 것
 장점 : 객체지향적인 코드로 더 직관적이고 비즈니스 로직에 더 집중할 수 있게 도와준다. 재사용 및 유지보수가 편리해진다.
  DBMS에 대한 종속성이 줄어든다.
 단점 : 완벽히 ORM으로만 서비스를 구현하기가 어렵다. 프로시저가 많은 시스템에서 ORM의 객체 지향적인 장점을 활용하기 어렵다.

 4-1. 자바스크립트 생태계의 ORM에는 어떤 것들이 있나요?
  sequelize가 있다. 시퀄라이즈는 자바스크립트 객체와 db의 릴레이션을 매핑해주는 도구로 자바스크립트 구문을 알아서 sql로 변환해주어서 좀 더 의존성이 낮은
  프로그래밍을 할 수 있도록 도와준다.

5. 모델간의 1:1, 1:N, N:M 관계는 각각 무엇이고 어떨 때 사용하나요?
 1:1 - 두 entity의 관계성이 1:1 관계일 때 ER모델의 Reloation Type을 관계 모델로 변환을 할 경우.
 1:N - 부모는 많은 자식을 가질 수 있고 자식은 한 부모를 가지는 관계.
 N:M - 두 Entity가 primary key를 가져와서 하나의 릴레이션을 생성한다. 

6. DB에 사용자의 암호를 평문으로 저장하지 않고도 사용자의 암호를 인증하는 것이 가능한 이유는 무엇일까요?
 암호화 알고리즘을 사용해 사용자의 암호를 숨기기 때문이다.
 6-1. 해시 함수에는 어떤 것이 있나요?
  SHA-1,128,196,256 MD5 등이 있다.
 6-2. 사용자의 암호를 해싱하여 저장할 때 어떤 식으로 저장하는 것이 보안에 좋을까요?
  bcrypt를 사용하여 사용자의 암호를 암호화 하고 db에 저장한다. 해시함수는 단방향이기 때문에 암호화한 암호를 다시 해석할 수는 없다.

Advanced
Object–relational impedance mismatch란 어떤 개념인가요?
 관계형 데이터베이스의 sql과 프로그래밍 언어 사이에 데이터 구조, 기능 등의 차이로 발생하는 충돌을 일컫는다.

Foreign Key란 무엇인가요? 이것을 사용할 때의 장점과 단점은 무엇일까요?
 테이블을 서로 연결하는데 사용되는 키다. 
 장점으로 어떤 테이블과 관계가 있는지 명확히 알 수 있다.
 단점으로 관리의 비용 문제가 있고 실행계획을 제어할 수 없다. 또한 성능저하가 있다.

이전에 쓰이던 해시함수들에는 어떤 것이 있을까요? 패스워드 해싱의 추세의 역사는 어떻게 이어져왔나요?
 ...