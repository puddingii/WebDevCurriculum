1. 쿠키란 무엇일까요?
 서버가 사용자의 웹 브라우저에 전송하는 작은 데이터 조각이다. 브라우저는 이 데이터를 저장해 놓았다가, 동일한 서버에 재 요청시 저장된 데이터를 함께
 전송한다. 상태정보를 기억시켜주는 것을 이용하여 로그인 상태를 유지할 수 있다.
 1-1. 쿠키는 어떤 식으로 동작하나요? 쿠키는 어떤 식으로 서버와 클라이언트 사이에 정보를 주고받나요?
  클라이언트가 페이지를 요청하면 서버에서 쿠키를 생성하고 http헤더에 쿠키를 포함 시켜 응답한다. 브라우저가 종료되어도 쿠키 만료 기간이 남아있다면 클라이언트에서
  보관하고 있고 같은 요청을 할 경우 HTTP헤더에 쿠키를 함깨 보낸다. 변경할 필요가 있을 땐 서버에서 변경된 쿠키를 HTTP헤더에 포함시켜 응답한다.

2. 웹 어플리케이션의 세션이란 무엇일까요?
 쿠키를 기반으로 하고 있지만 유저정보파일을 서버 측에서 관리한다. 서버에서는 클라이언트를 구분하기 위해 세션 ID를 부여하고 서버에 접속해서 브라우저를 종료할 때까지 
 인증상태를 유지한다. 보안면에서 쿠키보다 좋지만 사용자가 많아질수록 서버 메모리를 많이 차지하고 요청속도가 쿠키보다 느리다.
 2-1. 세션의 ID와 내용은 각각 어디에 저장되고 어떻게 서버와 교환되나요?
  클라이언트가 서버에 접속 시 세션 ID를 발급받고 쿠키를 사용해서 저장한다. 클라이언트가 서버에 요청할 때 이 쿠키의 세션ID를 서버에 전달해서 사용하고
  서버는 이 ID를 전달 받아서 ID에 맞는 클라이언트 정보를 가져온다.

3. JWT란 무엇인가요?
 JSON형태의 토큰으로 수신/송신자 간에 정보를 JSON객체로 안전하게 전송하기 위한 간결하고 Self-contained한 방법을 정의하는 개방향표준(RFC 7519)이다.
 3-1. JWT 토큰은 어디에 저장되고 어떻게 서버와 교환되나요?
  클라이언트가 권한 부여 서버에 권한 부여를 요청하고 권한이 부여되면 권한 서버는 클라이언트에게 액세스 토큰을 반환한다. 그 토큰을 사용하여 서버에 엑세스 할 수 있다.
  발급된 토큰은 LocalStorage 혹은 SessionStorage, Cookie에 저장할 수 있다.

4. 세션에 비해 JWT가 가지는 장점은 무엇인가요? 또 JWT에 비해 세션이 가지는 장점은 무엇인가요?
 html및 http환경에서 전달하기 좋다. 또한 보안 측면에서 X.509인증서 형식의 공개/개인 키 쌍을 사용할 수 있다. JSON 파서이기 때문에 대부분의 프로그래밍
 언어에서 일반적으로 쓸 수 있다는 것이 장점이다.
 세션은 쿠키를 매개로 인증을 거치기 때문에 쿠키가 담긴 HTTP요청이 노출되더라도 쿠키 자체에 유의미한 값을 갖고있지 않아 인증을 거치는 것보단 안전하다.