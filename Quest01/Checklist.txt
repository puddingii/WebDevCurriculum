1. HTML 표준의 역사는 어떻게 될까요?
 1-1. HTML 표준을 지키는 것은 왜 중요할까요?
    표준을 지킴으로써 수정 및 운영관리가 용이하고 호환성이 높아지며 협업 등 정보 전달에 있어 의사소통이 용이해지기 때문이다.

 1-2. XHTML 2.0은 왜 세상에 나오지 못하게 되었을까요?
    XHTML2.0 작업 초안 때 HTML5 및 XHTML5작업을 위해 작업이 중단됨.

 1-3. HTML5 표준은 어떤 과정을 통해 정해질까요?
    WHATWG조직이 생활표준으로 사용하기 위한 작업을 계속 했다. 그리고 W3C가 HTML5를 후보 권장 사항으로 지정했고 추후 제안된 권장 사항으로 옮겼으며 2014년에 안정적인 W3C 권장 사항으로
    릴리스 되었다.

2. 브라우저의 역사는 어떻게 될까요?
 2-1. Internet Explorer가 브라우저 시장을 독점하면서 어떤 문제가 일어났고, 이 문제는 어떻게 해결되었을까요?
    다른 회사의 브라우저의 점유율이 줄어들면서 점유율이 줄어든 브라우저인 회사가 매각되었다. 이 문제는 독점적 지위 남용으로 미 법무부에 제소되었다가
    호환성 문제 등으로 크롬이나 다른 브라우저에 밀리기 시작하다가 21년 지원 종료를 하게 되었다.

 2-2. 현재 시점에 브라우저별 점유율은 어떻게 될까요? 이 브라우저별 점유율을 알아보는 것은 왜 중요할까요?
    크롬이 60%가 넘는 점유율을 보이고 있고 그 다음으로는 safari가 14%언저리 그 외에의 브라우저들은 비슷한 점유율을 가지고 있다.
    내 생각 : 웹사이트를 제작할 때 브라우저별로 지원하는 언어나 함수 등이 차이가 있기 때문에 사람들이 자주 애용하는 브라우저들을 기반으로 개발하는 것이
    효율이 좋기 때문이다.  

 2-3. 브라우저 엔진(렌더링 엔진)이란? 어떤 브라우저들이 어떤 엔진을 쓰는지?
    브라우저 엔진은 주된 모든 웹 브라우저의 핵심이 되는 소프트웨어 구성 요소이다. 주된 역할로 html문서와 기타 자원의 웹페이지를 시각 표현으로 변환시키는 것.
    블링크(Blink) : 웹키트에서 파생된 레이아웃 엔진으로 크롬, 오페라 등이 이를 탑재함.
    웹키트(Webkit) : KHTML에서 파생된 레이아웃 엔진으로 사파리 등이 탑재하고 있다.
    트라이던트(Trident) : 마이크로소프트의 레이아웃 엔진으로 iIE, 아웃룩 익스프레스, 마이크로소프트 아웃룩, 윈앰프 등이 이를 탑재함.

 2-4. 모바일 시대 이후, 최근에 출시된 브라우저들은 어떤 특징?
    대표적으로 chrome으로 모바일-pc를 플레이스토어와 웹스토어를 통해 연동을 용이하게 했다.
    네이버에서 만든 웨일 브라우저는 퀵바에 블로그, 언어변환, 주식, 날씨 등의 정보들을 원하는 것만 쉽게 볼 수 있다.

3. HTML 문서는 어떤 구조로 이루어져 있는지?
 3-1. <head>에 자주 들어가는 엘리먼트들은 어떤 것이 있고, 역할은?
    기계가 식별할 수 있는 메타데이터를 담는 역할로 주로 title, style, meta, script 등을 자주 쓴다.
    title같은 경우 브라우저의 탭에 뜨는 글씨를 나타내고 script를 사용하여 보통 javascript를 자주 불러와 쓴다. 

 3-2. 시맨틱 태그는 무엇인지?(어떤점이 좋고 section과 div,header,footer,article의 차이는 무엇인지?)
    이름 자체만으로 그 의미를 전달할 수 있는 태그이다. header같은 경우 시맨틱 태그로 header자체로도 어느역할을 하는지 대충 가늠이 가능하다.
    section은 독립적인 구획을 나타낼 때 사용하고 이와 비슷하게 article은 문서,페이지 안에서 독립적으로 구분해 배포하거나 재사용을 하기위한 태그이다.
    header, footer는 각자 머릿말과 꼬릿말에 오는 요소로 header는 제목,로고,검색 폼 등의 요소를 포함하고 footer는 구획의 작성자, 저작권 정보, 관련 문서 등의 내용을 담는다.
    div는 단지 순수 컨테이너로 아무것도 표현하지 않는다. article이나 nav등 적절하지 않을 때 사용하는 요소로 다른 요소들을 묶어서 표현하는 용도로 사용가능하다.

 3-3. 블록 레벨 엘리먼트와 인라인 엘리먼트들의 차이?
    블록레벨요소는 부모 요소의 전체 공간을 차지하여 블록을 만든다. 인라인 엘리먼트는 콘텐츠의 흐름을 끊지 않고, 요소를 구성하는 태그에 할당된 공간만 차지.(블록라인은
    줄바꿈을 유발함.)
    기본적으로 블록레벨은 새로운 줄에서 시작하지만 인라인은 줄의 어느 곳에서나 시작할 수 있다.
